if-shell "uname | grep -q Darwin" "set-option -g default-shell /opt/homebrew/bin/bash"
if-shell "uname | grep -q Linux" "set-option -g default-shell /usr/bin/bash"
set -sg escape-time 1

# --- vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'wl-copy'

# --- Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
# --- END smart panes

# --- tmux QoL bindings
# - reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
# - mouse on/off
bind m set -gF mouse "#{?mouse,off,on}" \; display-message "#{?mouse,Mouse: ON, Mouse: OFF}"

# --- tmux plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jonmosco/kube-tmux'

# --- powerline
# set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'erikw/tmux-powerline'

# --- Themes
# set -g @plugin 'catppuccin/tmux#latest' 
# set -g @catppuccin_flavor 'mocha'

# --- Kubernetes
# set -g status-center "#(/bin/bash $HOME/.tmux/plugins/kube-tmux/kube.tmux 250 red cyan)"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '${HOME}/.tmux/plugins/tpm/tpm'

